name: Deploy to Cloud Run

on:
  push:
    branches: ["main"]
    paths: ["order-api/**"]
  workflow_dispatch:

env:
  PROJECT_ID: queryhub-473901
  REGION: us-east4
  REPOSITORY: mlops-lab4-repo
  IMAGE_NAME: order-api
  SERVICE: order-api

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies for tests
        run: |
          python -m pip install --upgrade pip
          pip install -r order-api/requirements.txt

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and Push Order Api Docker Image
        run: |
          IMAGE="$REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE_NAME"
          docker build -t $IMAGE -f order-api/Dockerfile order-api
          docker push $IMAGE
      
      - name: Deploy Order API to Cloud Run
        run: |
          gcloud run deploy order-api \
            --image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/order-api:latest \
            --region=${{ env.REGION }} \
            --platform=managed \
            --allow-unauthenticated

      # - name: Deploy User API to Cloud Run
      #   run: |
      #     gcloud run deploy user-api \
      #       --image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/user-api:latest \
      #       --region=${{ env.REGION }} \
      #       --platform=managed \
      #       --allow-unauthenticated

      # - name: Create or Update API Gateway Config
      #   run: |
      #     cat > openapi.yaml <<EOF
      #     openapi: 3.0.0
      #     info:
      #       title: FastAPI Gateway
      #       version: 1.0.0
      #     paths:
      #       /order:
      #         get:
      #           x-google-backend:
      #             address: $(gcloud run services describe order-api --region=${{ env.REGION }} --format="value(status.url)")
      #           responses:
      #             '200':
      #               description: Order API endpoint
      #       /user:
      #         get:
      #           x-google-backend:
      #             address: $(gcloud run services describe user-api --region=${{ env.REGION }} --format="value(status.url)")
      #           responses:
      #             '200':
      #               description: User API endpoint
      #     EOF

      #     gcloud api-gateway api-configs create fastapi-config \
      #       --api=fastapi-gateway \
      #       --openapi-spec=openapi.yaml \
      #       --project=${{ env.PROJECT_ID }} \
      #       --backend-auth-service-account=${{ secrets.GCP_SA_EMAIL }} \
      #       || echo "Config already exists"

      # - name: Deploy API Gateway
      #   run: |
      #     gcloud api-gateway gateways create fastapi-gateway \
      #       --api=fastapi-gateway \
      #       --api-config=fastapi-config \
      #       --location=${{ env.REGION }} \
      #       --project=${{ env.PROJECT_ID }} \
      #       || echo "Gateway already exists"

      # - name: Deployment success
      #   run: echo "âœ… FastAPI services and API Gateway deployed successfully!"